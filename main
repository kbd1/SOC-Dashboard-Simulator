import os
import re
import json
import matplotlib.pyplot as plt
from datetime import datetime
import random

# Mock log generator
def generate_logs(log_file):
    activities = [
        "User login success",
        "User login failure",
        "File accessed",
        "Unauthorized access attempt",
        "Application crashed",
        "Firewall rule triggered"
    ]
    with open(log_file, "w") as f:
        for _ in range(100):
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            activity = random.choice(activities)
            f.write(f"{timestamp} - {activity}\n")

# Log parser
def parse_logs(log_file):
    suspicious_keywords = ["failure", "unauthorized", "crashed"]
    alerts = []
    with open(log_file, "r") as f:
        for line in f:
            if any(keyword in line.lower() for keyword in suspicious_keywords):
                alerts.append(line.strip())
    return alerts

# Visualization
def visualize_logs(alerts):
    categories = ["Failures", "Unauthorized", "Crashes"]
    counts = [sum(1 for alert in alerts if cat.lower() in alert.lower()) for cat in categories]

    plt.bar(categories, counts, color=["red", "orange", "blue"])
    plt.title("SOC Alerts Breakdown")
    plt.ylabel("Number of Alerts")
    plt.show()

# Main Function
if __name__ == "__main__":
    log_file = "mock_logs.txt"
    
    # Generate mock logs
    generate_logs(log_file)
    print(f"Logs generated: {log_file}")

    # Parse logs for alerts
    alerts = parse_logs(log_file)
    print(f"Alerts found: {len(alerts)}")
    for alert in alerts:
        print(alert)

    # Visualize alerts
    visualize_logs(alerts)
